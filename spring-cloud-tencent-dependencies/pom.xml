<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies-parent</artifactId>
        <version>2.3.1.RELEASE</version>
        <relativePath/>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tencent.cloud</groupId>
    <artifactId>spring-cloud-tencent-dependencies</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <name>Spring Cloud Tencent Dependencies</name>
    <description>Spring Cloud Tencent Dependencies</description>

    <properties>
        <revision>1.0.0.Hoxton.SR9</revision>
        <polaris.version>1.0.0-SNAPSHOT</polaris.version>
        <tomcat.version>10.0.0-M6</tomcat.version>
        <powermock.version>2.0.0</powermock.version>

        <!-- Maven Plugin Versions -->
        <maven-source-plugin.version>3.2.0</maven-source-plugin.version>
        <maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
        <flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <artifactId>polaris-dependencies</artifactId>
                <groupId>com.tencent.nameservice</groupId>
                <version>${polaris.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-websocket</artifactId>
                <version>${tomcat.version}</version>
            </dependency>

            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-tencent-commons</artifactId>
                <version>${revision}</version>
            </dependency>


            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-starter-tencent-polaris-ratelimit</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-starter-tencent-polaris-circuitbreaker</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-starter-tencent-polaris-router</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-tencent-polaris-context</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-tencent-metadata</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-tencent-feign</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-starter-tencent-polaris-discovery</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- powermock-module-junit4 -->
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
            </dependency>

            <!-- powermock-api-mockito -->
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${powermock.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>